{
  "meta": {
    "label": "2. Train models and evaluate errors on historical data",
    "description": "Train forecast models and evaluate them on historical data using temporal split or cross-validation",
    "icon": "icon-calendar"
  },
  "kind": "R",
  "selectableFromDataset": "INPUT_DATASET_NAME",
  "inputRoles": [
    {
      "name": "INPUT_DATASET_NAME",
      "label": "Input dataset",
      "arity": "UNARY",
      "required": true,
      "acceptsDataset": true,
      "acceptsFolder": false
    }
  ],
  "outputRoles": [
    {
      "name": "EVALUATION_DATASET_NAME",
      "label": "Evaluation results",
      "description": "Dataset with the error evaluation results on historical data",
      "arity": "UNARY",
      "required": true,
      "acceptsDataset": true,
      "acceptsFolder": false
    },
    {
      "name": "MODEL_FOLDER_NAME",
      "label": "Trained models folder",
      "description": "Folder to save the trained models as RData files",
      "arity": "UNARY",
      "required": true,
      "acceptsDataset": false,
      "acceptsManagedFolder": true,
    }
  ],
  "params": [
    {
      "type": "SEPARATOR",
      "name": "separator_input",
      "label": "Input data"
    },
    {
      "name": "TIME_COLUMN",
      "label": "Time column",
      "description": "Must be of parsed DATE type.",
      "type": "COLUMN",
      "columnRole": "INPUT_DATASET_NAME",
      "mandatory": true
    },
    {
      "name": "SERIES_COLUMN",
      "label": "Target column",
      "description": "Series to forecast - Must be of NUMERIC type",
      "type": "COLUMN",
      "columnRole": "INPUT_DATASET_NAME",
      "mandatory": true
    },
    {
      "name": "EXT_SERIES_COLUMNS",
      "label": "Feature columns",
      "description": "Optional external regressors - Must be of NUMERIC type",
      "type": "COLUMNS",
      "columnRole": "INPUT_DATASET_NAME",
      "mandatory": false
    },
    {
      "name": "GRANULARITY",
      "label": "Time granularity",
      "description": "How often data is sampled",
      "type": "SELECT",
      "mandatory": true,
      "selectChoices": [
        {
          "value": "year",
          "label": "Year"
        },
        {
          "value": "quarter",
          "label": "Quarter"
        },
        {
          "value": "month",
          "label": "Month"
        },
        {
          "value": "week",
          "label": "Week"
        },
        {
          "value": "day",
          "label": "Day"
        },
        {
          "value": "hour",
          "label": "Hour"
        }
      ],
      "defaultValue": "day"
    },
    {
      "name": "separator_modeling",
      "label": "Modeling",
      "type": "SEPARATOR"
    },
    {
      "name": "AUTOML",
      "label": "Forecasting style",
      "type": "SELECT",
      "mandatory": true,
      "selectChoices": [
        {
          "value": "auto",
          "label": "Automated mode"
        },
        {
          "value": "expert",
          "label": "Expert mode"
        }
      ],
      "defaultValue": "auto"
    },
    {
      "type": "SEPARATOR",
      "visibilityCondition": "model.AUTOML=='expert'"
    },
    {
      "name": "NAIVE_MODEL_ACTIVATED",
      "label": "- Baseline",
      "description": "Based on the naive/snaive implementation in R \"forecast\" package",
      "type": "BOOLEAN",
      "defaultValue": true,
      "mandatory": true
    },
    {
      "name": "NAIVE_MODEL_METHOD",
      "label": "↳ method",
      "type": "SELECT",
      "mandatory": false,
      "defaultValue": "simple",
      "visibilityCondition": "model.AUTOML=='expert' && model.NAIVE_MODEL_ACTIVATED",
      "selectChoices": [
        {
          "value": "simple",
          "label": "Forecast preceding value"
        },
        {
          "value": "seasonal",
          "label": "Seasonal: forecast value at previous period"
        },
        {
          "value": "drift",
          "label": "Seasonal: forecast value at previous period with drift correction"
        }
      ]
    },
    {
      "name": "NAIVE_MODEL_KWARGS",
      "type": "MAP",
      "label": "↳ additional parameters",
      "visibilityCondition": "false",
      "mandatory": false
    },
    {
      "type": "SEPARATOR",
      "visibilityCondition": "model.AUTOML=='expert'"
    },
    // {
    //   "name": "PROPHET_MODEL_ACTIVATED",
    //   "label": "- Prophet",
    //   "description": "Based on the Prophet implementation in R \"prophet\" package.",
    //   "type": "BOOLEAN",
    //   "defaultValue": true,
    //   "mandatory": true
    // },
    // {
    //   "name": "PROPHET_MODEL_GROWTH",
    //   "label": "↳ Growth",
    //   "description": "Use a linear or logistic trend",
    //   "type": "SELECT",
    //   "defaultValue": "linear",
    //   "mandatory": true,
    //   "visibilityCondition": "model.AUTOML=='expert' && model.PROPHET_MODEL_ACTIVATED",
    //   "selectChoices": [
    //     {
    //       "value": "linear",
    //       "label": "Linear"
    //     },
    //     {
    //       "value": "logistic",
    //       "label": "Logistic"
    //     }
    //   ]
    // },
    // {
    //   "name": "PROPHET_MODEL_MINIMUM",
    //   "label": "↳ Minimum",
    //   "description": "Saturating minimum for logistic growth",
    //   "type": "DOUBLE",
    //   "defaultValue": 0.0,
    //   "mandatory": false,
    //   "visibilityCondition": "model.AUTOML=='expert' && model.PROPHET_MODEL_ACTIVATED && model.PROPHET_MODEL_GROWTH=='logistic'"
    // },
    // {
    //   "name": "PROPHET_MODEL_MAXIMUM",
    //   "label": "↳ Maximum",
    //   "description": "Saturating maximum for logistic growth",
    //   "type": "DOUBLE",
    //   "defaultValue": 1.0,
    //   "mandatory": false,
    //   "visibilityCondition": "model.AUTOML=='expert' && model.PROPHET_MODEL_ACTIVATED && model.PROPHET_MODEL_GROWTH=='logistic'"
    // },
    // {
    //   "name": "PROPHET_MODEL_KWARGS",
    //   "type": "MAP",
    //   "label": "↳  additional parameters",
    //   "description": "Optional additional parameters cf. cran.r-project.org/web/packages/prophet/prophet.pdf",
    //   "visibilityCondition": "model.AUTOML=='expert' && model.PROPHET_MODEL_ACTIVATED",
    //   "mandatory": false
    // },
    {
      "type": "SEPARATOR",
      "visibilityCondition": "model.AUTOML=='expert'"
    },
    {
      "name": "NEURALNETWORK_MODEL_ACTIVATED",
      "label": "- Neural Network",
      "description": "Based on the nnetar implementation in R \"forecast\" package.",
      "type": "BOOLEAN",
      "defaultValue": true,
      "mandatory": true
    },
    {
      "name": "NEURALNETWORK_MODEL_NUMBER_SEASONAL_LAGS",
      "label": "↳ seasonal lags",
      "description": "Number of seasonal lags used as inputs. Default is 1.",
      "type": "INT",
      "mandatory": false,
      "defaultValue": 1,
      "visibilityCondition": "model.AUTOML=='expert' && model.NEURALNETWORK_MODEL_ACTIVATED"
    },
    {
      "name": "NEURALNETWORK_MODEL_NUMBER_NON_SEASONAL_LAGS",
      "label": "↳ non-seasonal lags",
      "description": "Number of non-seasonal lags used as inputs. Leave -1 for automatic selection.",
      "type": "INT",
      "mandatory": false,
      "defaultValue": -1,
      "visibilityCondition": "model.AUTOML=='expert' && model.NEURALNETWORK_MODEL_ACTIVATED"
    },
    {
      "name": "NEURALNETWORK_MODEL_SIZE",
      "label": "↳ number of neurons",
      "description": "Number of neurons in the hidden layer. Leave -1 for automatic selection.",
      "type": "INT",
      "mandatory": false,
      "defaultValue": -1,
      "visibilityCondition": "model.AUTOML=='expert' && model.NEURALNETWORK_MODEL_ACTIVATED"
    },
    {
      "name": "NEURALNETWORK_MODEL_KWARGS",
      "type": "MAP",
      "label": "↳ additional parameters",
      "description": "Optional additional parameters cf. www.rdocumentation.org/packages/forecast/versions/8.4/topics/nnetar",
      "visibilityCondition": "model.AUTOML=='expert' && model.NEURALNETWORK_MODEL_ACTIVATED",
      "mandatory": false
    },
    {
      "type": "SEPARATOR",
      "visibilityCondition": "model.AUTOML=='expert'"
    },
    {
      "name": "ARIMA_MODEL_ACTIVATED",
      "label": "- ARIMA",
      "description": "Based on the auto.arima implementation in R \"forecast\" package.\nWARNING: slow for long time series (1000+ records)",
      "type": "BOOLEAN",
      "defaultValue": false,
      "mandatory": true
    },
    {
      "name": "ARIMA_MODEL_STEPWISE",
      "label": "↳ stepwise",
      "description": "Use stepwise procedure to speed up the search for model parameters",
      "type": "BOOLEAN",
      "defaultValue": true,
      "mandatory": false,
      "visibilityCondition": "model.AUTOML=='expert' && model.ARIMA_MODEL_ACTIVATED"
    },
    {
      "name": "ARIMA_MODEL_KWARGS",
      "type": "MAP",
      "label": "↳  additional parameters",
      "description": "Optional additional parameters cf. www.rdocumentation.org/packages/forecast/versions/8.4/topics/auto.arima",
      "visibilityCondition": "model.AUTOML=='expert' && model.ARIMA_MODEL_ACTIVATED",
      "mandatory": false
    },
    {
      "type": "SEPARATOR",
      "visibilityCondition": "model.AUTOML=='expert'"
    },
    {
      "name": "SEASONALTREND_MODEL_ACTIVATED",
      "label": "- Seasonal Trend",
      "description": "Based on the stlf implementation in R \"forecast\" package. WARNING: may not converge for non-seasonal data.",
      "type": "BOOLEAN",
      "defaultValue": false,
      "mandatory": true
    },
    {
      "name": "SEASONALTREND_MODEL_KWARGS",
      "type": "MAP",
      "label": "↳ additional parameters",
      "description": "Optional additional parameters cf. www.rdocumentation.org/packages/forecast/versions/8.4/topics/forecast.stl",
      "visibilityCondition": "model.AUTOML=='expert' && model.SEASONALTREND_MODEL_ACTIVATED",
      "mandatory": false
    },
    {
      "type": "SEPARATOR",
      "visibilityCondition": "model.AUTOML=='expert'"
    },
    {
      "name": "EXPONENTIALSMOOTHING_MODEL_ACTIVATED",
      "label": "- Exponential Smoothing",
      "description": "Based on the ets implementation in R \"forecast\" package.  WARNING: slow for long time series (1000+ records)",
      "type": "BOOLEAN",
      "defaultValue": false,
      "mandatory": true
    },
    {
      "name": "EXPONENTIALSMOOTHING_MODEL_ERROR_TYPE",
      "label": "↳ error type",
      "type": "SELECT",
      "mandatory": false,
      "defaultValue": "Z",
      "visibilityCondition": "model.AUTOML=='expert' && model.EXPONENTIALSMOOTHING_MODEL_ACTIVATED",
      "selectChoices": [
        {
          "value": "Z",
          "label": "Automatically selected"
        },
        {
          "value": "N",
          "label": "None"
        },
        {
          "value": "A",
          "label": "Additive"
        },
        {
          "value": "M",
          "label": "Multiplicative"
        }
      ]
    },
    {
      "name": "EXPONENTIALSMOOTHING_MODEL_TREND_TYPE",
      "label": "↳ trend type",
      "type": "SELECT",
      "mandatory": false,
      "defaultValue": "Z",
      "visibilityCondition": "model.AUTOML=='expert' && model.EXPONENTIALSMOOTHING_MODEL_ACTIVATED",
      "selectChoices": [
        {
          "value": "Z",
          "label": "Automatically selected"
        },
        {
          "value": "N",
          "label": "None"
        },
        {
          "value": "A",
          "label": "Additive"
        },
        {
          "value": "M",
          "label": "Multiplicative"
        }
      ]
    },
    {
      "name": "EXPONENTIALSMOOTHING_MODEL_SEASONALITY_TYPE",
      "label": "↳ seasonality type",
      "type": "SELECT",
      "mandatory": false,
      "defaultValue": "Z",
      "visibilityCondition": "model.AUTOML=='expert' && model.EXPONENTIALSMOOTHING_MODEL_ACTIVATED",
      "selectChoices": [
        {
          "value": "Z",
          "label": "Automatically selected"
        },
        {
          "value": "N",
          "label": "None"
        },
        {
          "value": "A",
          "label": "Additive"
        },
        {
          "value": "M",
          "label": "Multiplicative"
        }
      ]
    },
    {
      "name": "EXPONENTIALSMOOTHING_MODEL_KWARGS",
      "type": "MAP",
      "label": "↳ additional parameters",
      "description": "Optional additional parameters cf. www.rdocumentation.org/packages/forecast/versions/8.4/topics/ets",
      "visibilityCondition": "model.AUTOML=='expert' && model.EXPONENTIALSMOOTHING_MODEL_ACTIVATED",
      "mandatory": false
    },
    {
      "type": "SEPARATOR",
      "visibilityCondition": "model.AUTOML=='expert'"
    },
    {
      "name": "STATESPACE_MODEL_ACTIVATED",
      "label": "- State Space",
      "description": "Based on the tbats implementation in R \"forecast\" package.\nWARNING: slow for long time series (1000+ records)",
      "type": "BOOLEAN",
      "defaultValue": false,
      "mandatory": true
    },
    {
      "name": "STATESPACE_MODEL_KWARGS",
      "type": "MAP",
      "label": "↳  additional parameters",
      "description": "Optional additional parameters cf. www.rdocumentation.org/packages/forecast/versions/8.4/topics/tbats",
      "mandatory": false,
      "visibilityCondition": "model.AUTOML=='expert' && model.STATESPACE_MODEL_ACTIVATED"
    },
    {
      "name": "separator_evaluation",
      "label": "Error Evaluation",
      "type": "SEPARATOR"
    },
    {
      "name": "EVAL_STRATEGY",
      "label": "Strategy",
      "type": "SELECT",
      "mandatory": true,
      "description": "Time-based split or cross-validation based on R \"Prophet\" method (slower)",
      "selectChoices": [
        {
          "value": "split",
          "label": "Train/Test Split"
        },
        {
          "value": "crossval",
          "label": "Time Series Cross-Validation"
        }
      ],
      "defaultValue": "split"
    },
    {
      "name": "EVAL_HORIZON",
      "label": "Horizon",
      "description": "Number of time steps to evaluate the forecast error",
      "type": "INT",
      "defaultValue": 10,
      "mandatory": true
    },
    {
      "name": "CROSSVAL_INITIAL",
      "label": "Initial training",
      "description": "Number of time steps in the initial train set. If -1, 10 * Horizon is used.",
      "type": "INT",
      "mandatory": false,
      "defaultValue": -1,
      "visibilityCondition": "model.EVAL_STRATEGY =='crossval'"
    },
    {
      "name": "CROSSVAL_PERIOD",
      "label": "Cutoff period",
      "description": "Number of time steps between each split. If -1, 0.5 * Horizon is used.",
      "type": "INT",
      "mandatory": false,
      "defaultValue": -1,
      "visibilityCondition": "model.EVAL_STRATEGY =='crossval'"
    }
  ],
  "resourceKeys": []
}
